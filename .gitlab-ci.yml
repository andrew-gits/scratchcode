image: node:16-alpine
# services:
#   - docker:dind

variables:
  DB_PASSWORD: $DB_PASSWORD
  VERCEL_TOKEN: $VERCEL_TOKEN
  VERCEL_LINK: $VERCEL_LINK

stages:
  - build
  - test
  - deploy

install-dependencies:
  stage: build
  script:
    # - mkdir db
    # - echo $DB_PASSWORD > db/password.txt
    # - echo $VERCEL_TOKEN > vercel.txt
    # - mkdir app/.vercel
    # - echo $VERCEL_LINK > app/.vercel/project.json
    # - apk add --no-cache docker-compose
    # - apk add --no-cache --upgrade bash
    # - chmod +x ./dev-up.bash
    # - /bin/bash ./dev-up.bash
    # - docker exec scratch-app /bin/bash -c "cd ../backend && ../run_tests.bash"
    - cd app
    - npm ci
    - npm install @angular/cli@14

  cache:
    key:
      files:
        - app/package-lock.json
    paths:
      - app/node_modules
    policy: pull-push
  only:
    refs:
      - merge_requests
      - main
    # changes:
    #   - package-lock.json

test-api:
  image: golang
  stage: test
  script:
    - echo "This job tests something"
    - cd ./backend
    - /bin/bash ../run_tests.bash

test-app:
  stage: test
  image: node:16-alpine
  before_script:
    - apk add chromium
    - export CHROME_BIN=/usr/bin/chromium-browser
  script:
    - cd app
    - npm run lint
    - npm run test:prod
  cache:
    key:
      files:
        - app/package-lock.json
    paths:
      - app/node_modules
    policy: pull

test-e2e:
  stage: test
  script:
    - echo "This job tests something"

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production
